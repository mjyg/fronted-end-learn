"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const safe_1 = require("colors/safe");
const fs_1 = require("fs");
const fs_extra_1 = require("fs-extra");
const path_1 = require("path");
const pug_1 = require("pug");
const reports_1 = require("../utils/reports");
class HtmlReporter {
    constructor(options) {
        this.options = options;
    }
    report(clones, statistic) {
        const reportFunction = pug_1.compileFile(__dirname + '/../../html/report.pug');
        const formatsReports = statistic && statistic.formats
            ? Object.keys(statistic.formats).map((format) => {
                return { value: statistic.formats[format].total.lines, name: format };
            })
            : [];
        const html = reportFunction(Object.assign(Object.assign({ total: {} }, statistic), { formatsReports,
            clones,
            getPath: reports_1.getPath,
            getSourceLocation: reports_1.getSourceLocation,
            generateLine: reports_1.generateLine, options: this.options }));
        if (this.options.output) {
            fs_extra_1.ensureDirSync(this.options.output);
            fs_1.writeFileSync(path_1.join(this.options.output, 'jscpd-report.html'), html);
            console.log(safe_1.green(`HTML report saved to ${path_1.join(this.options.output, 'jscpd-report.html')}`));
        }
    }
}
exports.HtmlReporter = HtmlReporter;
//# sourceMappingURL=html.js.map